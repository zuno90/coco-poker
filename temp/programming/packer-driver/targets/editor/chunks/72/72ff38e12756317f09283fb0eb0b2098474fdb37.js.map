{"version":3,"sources":["file:///Users/zuno/Desktop/ZUNO/coco-poker/assets/scripts/main.ts"],"names":["_decorator","Component","director","EPokerLayout","Config","ccclass","property","main","onLoad","loadScene","Loading","start","player","getPlayer","console","log","Auth","Lobby","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAsCC,MAAAA,Q,OAAAA,Q;;AAClDC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;sBAGjBO,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BN,SAD1B,CACoC;AAClC;AACA;AACA;AACA;AACA;AACA;AAEOO,QAAAA,MAAM,GAAG;AACdN,UAAAA,QAAQ,CAACO,SAAT,CAAmB;AAAA;AAAA,4CAAaC,OAAhC,EADc,CAGd;AACA;AACA;AACA;AACD;;AAEiB,cAALC,KAAK,GAAG;AACnB,gBAAMC,MAAM,GAAG,MAAM;AAAA;AAAA,gCAAOC,SAAP,EAArB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoB,MAApB;AACA,cAAI,CAACA,MAAL,EAAa,OAAOV,QAAQ,CAACO,SAAT,CAAmB;AAAA;AAAA,4CAAaO,IAAhC,CAAP;AACbd,UAAAA,QAAQ,CAACO,SAAT,CAAmB;AAAA;AAAA,4CAAaQ,KAAhC;AACD;;AAEMC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAAE,CAxBD,CA0BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA9CkC,O","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab, director } from \"cc\";\nimport { EPokerLayout, EPokerScene } from \"db://assets/__types__/layout.type\";\nimport { Config } from \"db://assets/scripts/Config\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"main\")\nexport class main extends Component {\n  //   @property(Node) private mainLayout: Node;\n  //\n  //   @property(Prefab) private loadingLayout: Prefab;\n  //   @property(Prefab) private authLayout: Prefab;\n  //   @property(Prefab) private lobbyLayout: Prefab;\n  //   @property(Prefab) private roomLayout: Prefab;\n\n  public onLoad() {\n    director.loadScene(EPokerLayout.Loading);\n\n    // const player = await Config.getPlayer();\n    // if (!player) return this.changeLayout(EPokerLayout.Auth);\n    // this.changeLayout(EPokerLayout.Loading);\n    // this.changeLayout(EPokerLayout.Lobby);\n  }\n\n  public async start() {\n    const player = await Config.getPlayer();\n    console.log(player, \"haha\");\n    if (!player) return director.loadScene(EPokerLayout.Auth);\n    director.loadScene(EPokerLayout.Lobby);\n  }\n\n  public update(deltaTime: number) {}\n\n  // private changeLayout(layout: EPokerLayout) {\n  //   this.mainLayout.removeAllChildren();\n  //   let targetNode: Node;\n  //   switch (layout) {\n  //     case EPokerLayout.Loading:\n  //       targetNode = instantiate(this.loadingLayout);\n  //       break;\n  //     case EPokerLayout.Auth:\n  //       targetNode = instantiate(this.authLayout);\n  //       break;\n  //     case EPokerLayout.Lobby:\n  //       targetNode = instantiate(this.lobbyLayout);\n  //       break;\n  //     case EPokerLayout.Room:\n  //       targetNode = instantiate(this.roomLayout);\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.mainLayout.addChild(targetNode);\n  // }\n}\n"]}