{"version":3,"sources":["file:///Users/zuno/Desktop/ZUNO/coco-poker/assets/scripts/main.ts"],"names":["_decorator","Component","director","EPokerScene","Config","ccclass","property","main","onLoad","console","time","loadScene","Loading","timeEnd","start","player","getPlayer","LoginAuth","HomeLobby","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;;AACvBC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,M,iBAAAA,M;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;sBAGjBO,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BN,SAD1B,CACoC;AAClC;AACA;AACA;AACA;AACA;AACA;AAEOO,QAAAA,MAAM,GAAG;AACdC,UAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACAR,UAAAA,QAAQ,CAACS,SAAT,CAAmB;AAAA;AAAA,0CAAYC,OAA/B,EAFc,CAId;AACA;AACA;AACA;;AACAH,UAAAA,OAAO,CAACI,OAAR,CAAgB,YAAhB;AACD;;AAEYC,QAAAA,KAAK,GAAG;AAAA;AACnBL,YAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACA,gBAAMK,MAAM,SAAS;AAAA;AAAA,kCAAOC,SAAP,EAArB;AACA,gBAAI,CAACD,MAAL,EAAa,OAAOb,QAAQ,CAACS,SAAT,CAAmB;AAAA;AAAA,4CAAYM,SAA/B,CAAP;AACbf,YAAAA,QAAQ,CAACS,SAAT,CAAmB;AAAA;AAAA,4CAAYO,SAA/B;AACAT,YAAAA,OAAO,CAACI,OAAR,CAAgB,aAAhB;AALmB;AAMpB;;AAEMM,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAAE,CA3BD,CA6BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAjDkC,O","sourcesContent":["import { _decorator, Component, director } from \"cc\";\nimport { EPokerScene } from \"db://assets/__types__/layout.type\";\nimport { Config } from \"db://assets/scripts/Config\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"main\")\nexport class main extends Component {\n  //   @property(Node) private mainLayout: Node;\n  //\n  //   @property(Prefab) private loadingLayout: Prefab;\n  //   @property(Prefab) private authLayout: Prefab;\n  //   @property(Prefab) private lobbyLayout: Prefab;\n  //   @property(Prefab) private roomLayout: Prefab;\n\n  public onLoad() {\n    console.time(\"end onload\");\n    director.loadScene(EPokerScene.Loading);\n\n    // const player = await Config.getPlayer();\n    // if (!player) return this.changeLayout(EPokerLayout.Auth);\n    // this.changeLayout(EPokerLayout.Loading);\n    // this.changeLayout(EPokerLayout.Lobby);\n    console.timeEnd(\"end onload\");\n  }\n\n  public async start() {\n    console.time(\"start start\");\n    const player = await Config.getPlayer();\n    if (!player) return director.loadScene(EPokerScene.LoginAuth);\n    director.loadScene(EPokerScene.HomeLobby);\n    console.timeEnd(\"start start\");\n  }\n\n  public update(deltaTime: number) {}\n\n  // private changeLayout(layout: EPokerLayout) {\n  //   this.mainLayout.removeAllChildren();\n  //   let targetNode: Node;\n  //   switch (layout) {\n  //     case EPokerLayout.Loading:\n  //       targetNode = instantiate(this.loadingLayout);\n  //       break;\n  //     case EPokerLayout.Auth:\n  //       targetNode = instantiate(this.authLayout);\n  //       break;\n  //     case EPokerLayout.Lobby:\n  //       targetNode = instantiate(this.lobbyLayout);\n  //       break;\n  //     case EPokerLayout.Room:\n  //       targetNode = instantiate(this.roomLayout);\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.mainLayout.addChild(targetNode);\n  // }\n}\n"]}