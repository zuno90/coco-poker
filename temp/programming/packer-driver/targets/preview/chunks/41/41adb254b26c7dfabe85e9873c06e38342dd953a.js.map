{"version":3,"sources":["file:///Users/zuno/Desktop/ZUNO/coco-poker/assets/scripts/ColyseusNetwork.ts"],"names":["_decorator","Component","Colyseus","ccclass","property","ColyseusNetwork","start","endpoint","useSSL","hostname","port","client","Client","connect","room","joinOrCreate","jwt","console","log","sessionId","onStateChange","state","onLeave","code","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AACdC,MAAAA,Q;;;;;;;;;OAED;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;iCAGjBK,e,WADZF,OAAO,CAAC,iBAAD,C,2BAAR,MACaE,eADb,SACqCJ,SADrC,CAC+C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAQtCK,QAAAA,KAAK,GAAG;AACb;AACA;AACA,cAAMC,QAAQ,IAAM,KAAKC,MAAL,GAAc,KAAd,GAAsB,IAA5B,YAAsC,KAAKC,QAA3C,IACZ,KAAKD,MAAL,GAAc,EAAd,GAAmB,KAAKE,IADZ,CAAd;AAGA,eAAKC,MAAL,GAAc,IAAI;AAAA;AAAA,oCAASC,MAAb,CAAoBL,QAApB,CAAd,CANa,CAQb;AACA;AACD;;AAEYM,QAAAA,OAAO,GAAG;AAAA;;AAAA;AACrB,gBAAI;AACF,cAAA,KAAI,CAACC,IAAL,SAAkB,KAAI,CAACH,MAAL,CAAYI,YAAZ,CAAyB,MAAzB,EAAiC;AAAEC,gBAAAA,GAAG,EAAE;AAAP,eAAjC,CAAlB;AAEAC,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAI,CAACJ,IAAL,CAAUK,SAA3C;;AAEA,cAAA,KAAI,CAACL,IAAL,CAAUM,aAAV,CAAyBC,KAAD,IAAW;AACjCJ,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,KAA/B;AACD,eAFD;;AAIA,cAAA,KAAI,CAACP,IAAL,CAAUQ,OAAV,CAAmBC,IAAD,IAAU;AAC1BN,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,IAAxB;AACD,eAFD;AAGD,aAbD,CAaE,OAAOC,GAAP,EAAY;AACZP,cAAAA,OAAO,CAACQ,KAAR,CAAcD,GAAd;AACD;AAhBoB;AAiBtB;;AArC4C,O,2EAC5CpB,Q;;;;;iBAAmC,E;;+EACnCA,Q;;;;;iBAA+B,I;;iFAC/BA,Q;;;;;iBAAyB,K","sourcesContent":["import { _decorator, Component } from \"cc\";\nimport Colyseus from \"db://colyseus-sdk/colyseus.js\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"ColyseusNetwork\")\nexport class ColyseusNetwork extends Component {\n  @property public hostname: string = \"\";\n  @property public port: number = null;\n  @property public useSSL = false;\n\n  client!: Colyseus.Client;\n  room!: Colyseus.Room;\n\n  public start() {\n    // Instantiate Colyseus Client\n    // connects into (ws|wss)://hostname[:port]\n    const endpoint = `${this.useSSL ? \"wss\" : \"ws\"}://${this.hostname}${\n      this.useSSL ? \"\" : this.port\n    }`;\n    this.client = new Colyseus.Client(endpoint);\n\n    // Connect into the room\n    // this.connect();\n  }\n\n  public async connect() {\n    try {\n      this.room = await this.client.joinOrCreate(\"noob\", { jwt: \"\" });\n\n      console.log(\"joined successfully!\");\n      console.log(\"user's sessionId:\", this.room.sessionId);\n\n      this.room.onStateChange((state) => {\n        console.log(\"onStateChange: \", state);\n      });\n\n      this.room.onLeave((code) => {\n        console.log(\"onLeave:\", code);\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n}\n"]}